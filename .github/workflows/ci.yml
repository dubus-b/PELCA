name: CI

on: 
  pull_request:
  push:
    tags:
      - 'v*'  # Trigger sur les tags qui commencent par v (par exemple v1.0)

jobs:
  test:
    strategy:
      matrix:
        os: [windows-latest]
        python-version: [3.12]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      - name: Run tests
        run: |
          .venv/Scripts/activate  # Activation spécifique à Windows
          pytest tests/

      - name: Build Windows Executable
        run: |
          .venv/Scripts/activate  # Activer l'environnement virtuel
          pip install pyinstaller  # Installer PyInstaller
          pyinstaller --onefile src/main_PELCA_GUI.py

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Executable
        uses: softprops/action-gh-release@v1
        with:
          upload_artifact: true
          asset_path: dist/main_PELCA_GUI.exe  # Chemin vers l'exécutable généré par PyInstaller
          asset_name: main_PELCA_GUI.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
